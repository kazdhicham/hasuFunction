version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
    - ./db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.3.0
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    ##extra_hosts:
    #- "host.docker.internal:127.0.0.1"
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: kasha
      #HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256","jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com","audience": "dashlim-5f43b", "issuer": "https://securetoken.google.com/dashlim-5f43b"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      #HASURA_GRAPHQL_AUTH_HOOK: "http://host.gocker.internal:5001/liismaiil/us-central1/authHook"
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256",
                "jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com", 
                "audience": "dashlim-5f43b", "issuer": "https://securetoken.google.com/dashlim-5f43b"}'

volumes:
  db_data:

